{
  "above": [
    {
      "title": "React",
      "category1": {
        "category": "상태관리",
        "description": "Client State와 Server State를 이해하고 있습니다. Recoil와 React Query를 주로 사용합니다"
      },
      "category2": {
        "category": "구조설계",
        "description": "구조 설계를 잘하면 프로젝트가 수월해지는 경험을 해봤고 그 중요성을 알고 있습니다. Component Composition을 늘 숙지하고 활용합니다"
      },
      "category3": {
        "category": "생명주기",
        "description": "useEffect, useLayoutEffect 사용을 통한 컴포넌트 로드"
      },
      "category4": {
        "category": "최적화",
        "description": "Memoization, Debounce, Throttle, useTransition, Suspense 사용"
      },
      "id": 1,
      "color": "#61DBFB"
    },
    {
      "title": "Javascript",
      "category1": {
        "category": "Object literal과 배열",
        "description": "Client State와 Server State를 이해하고 있습니다. Recoil와 React Query를 주로 사용합니다"
      },
      "category2": {
        "category": "비동기와 동기",
        "description": "구조 설계를 잘하면 프로젝트가 수월해지는 경험을 해봤고 그 중요성을 알고 있습니다. Component Composition을 늘 숙지하고 활용합니다"
      },
      "category3": {
        "category": "함수형 프로그램과 객체지향 프로그래밍",
        "description": "useEffect, useLayoutEffect 사용을 통한 컴포넌트 로드"
      },
      "category4": {
        "category": "Promise",
        "description": "Memoization, Debounce, Throttle, useTransition, Suspense 사용"
      },
      "id": 2,
      "color": "#F0DB4F"
    }
  ],
  "below": []
}
